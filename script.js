

// Условия


// if (1) {
//     console.log("верно")
// } else {
//     console.log('неверно')
// }


// let num = 50

// if (num < 49) {
//     console.log('неверно')
// } else if (num > 100) {
//     console.log('много')
// } else {
//     console.log('навена')
// };



// (num == 50) ? console.log('ok') : console.log('no');


// switch (num) {
//     case num < 49:
//         console.log('неверно');
//         break;
//     case num > 100:
//         console.log('много');
//         break;
//     case num > 80:
//         console.log('много ppc');
//         break;
//     case 50: //num == 50: Данная запись не будет верна , здесь при сравнении нужно писать именно значение
//     console.log('навена');
//     break;
//     default: 
//         console.log('something wrong');
//         break;// Эта директива нужна, чтобы всё подряд не выполнялось и останавливалось при достижении цели или наоборот
// }

















// Циклы






// Цикл while записывается с помощью ключевого слова while. Условие (num < 55)- пока это условие не будет выполнено, цикл будет выполняться
//далее идет тело цикла {} в нём мы записываем действия которые будет выполнять цикл итерация за итерацией, пока условие не будет выполнено

let num = 50;

// while (num < 55) {
//     console.log(num);
//     num++; 
// }






// Цикл do while дословно переводится как делай , пока . Сначала цикл выполняет итерацию, потом проходит проверку условия.

do {
    console.log(num);
    num++;
}
while (num < 55) 

// Оба этих цикла необходимы только тогда, когда мы хотим сначала что-то сделать, и только потом проверить условие



// Цикл For

// Первым значением будет переменная или что-нибудь другое. Вторым значением будет условие, при котором наш цикл остановит работу
// Третье условие - это ,что будет происходить каждую итерацию цикла для достижения его цели.
// В фигурных скобках мы записываем какое-то действие цикла. Например вывод в консоль результата каждой итерации

for (let i = 1; i < 8; i++) {
    if (i == 6) {
        break;
    }
    console.log(i)
}

//Также здесь мы использовали директиву break с условием, когда i = 6 , цикл остановится. То есть эта директива заверщшает цикл при достижении заданого условия
// Есть директива continue , которая просто пропускает значение, которое установили и приступает к следующей итерации.

// При работе с циклами необходимо следить за тем, чтобы наши значния могли быть преобразованны в логический контекст .Иначе мы рискуем тем,
//что цикл будет бесконечным.